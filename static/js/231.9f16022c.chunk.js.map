{"version":3,"file":"static/js/231.9f16022c.chunk.js","mappings":"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","sources":["Pages/User/CreateUser.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Select from \"react-select\";\r\n\r\nimport TextError from \"../../Component/TextError/TextError\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createUser } from \"../../Redux/User/thunk\";\r\nimport { errorFunction } from \"../../Component/Alert\";\r\nimport { checkRedundantDataUser } from \"../../utils/redundant/user\";\r\n\r\nimport { BsFillEyeFill, BsFillEyeSlashFill } from \"react-icons/bs\";\r\nimport \"./user.css\";\r\nimport { genders } from \"../../Component/Data/Data\";\r\nimport Button from \"../../Component/Button/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AsyncPaginate } from \"react-select-async-paginate\";\r\nimport axiosInstance from \"../../utils/axios\";\r\nconst CreateUser = ({ currentPage, loading }) => {\r\n  // props\r\n  const history = useHistory();\r\n  const permissions = useSelector((state) => state.auth.permissions);\r\n  const is_superuser = useSelector((state) => state.auth.is_superuser);\r\n  const user = useSelector((state) => state.user.user);\r\n  const edit = useSelector((state) => state.user.edit);\r\n  const [genderValue, setGenderValue] = useState(null);\r\n  const dispatch = useDispatch();\r\n  //state for disabling the submit button\r\n  const [password, setPassword] = useState(\"password\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"password\");\r\n  const [lock, setLock] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  //initial state of the form\r\n  const initialState = {\r\n    first_name: data !== null ? data.first_name : edit ? user?.first_name : \"\",\r\n    middle_name:\r\n      data !== null ? data.middle_name : edit ? user?.middle_name : \"\",\r\n    last_name: data !== null ? data.last_name : edit ? user?.last_name : \"\",\r\n    user_branch:\r\n      data !== null ? data.user_branch : edit ? user?.user_branch : \"\",\r\n    // group: data !== null ? data.group : edit ? user?.group : \"\",\r\n    email: data !== null ? data.email : edit ? user?.email : \"\",\r\n    employee_id:\r\n      data !== null ? data.employee_id : edit ? user?.employee_id : \"\",\r\n    username: data !== null ? data.username : edit ? user?.username : \"\",\r\n    gender: data !== null ? data.gender : edit ? user?.gender : \"\",\r\n    password: data !== null ? data.password : edit ? user?.password : \"\",\r\n    confirm_password:\r\n      data !== null\r\n        ? data.confirm_password\r\n        : edit\r\n        ? user?.confirm_password\r\n        : \"\",\r\n    is_active: data !== null ? data.is_active : edit ? user?.is_active : true,\r\n  };\r\n  //validation rules of the form\r\n  const validationSchema = Yup.object().shape({\r\n    first_name: Yup.string()\r\n      .min(2, \"First name must be at least 2 characters.\")\r\n      .max(50, \"First name should be 50 characters.\")\r\n      .matches(\r\n        /(?=.*^[A-Za-z]\\w).*$/,\r\n        \"First name should only contain alphabet.\"\r\n      ),\r\n    middle_name: Yup.string()\r\n      .min(2, \"Middle name must be at least 2 characters.\")\r\n      .max(50, \"Middle name should be 50 characters.\")\r\n      .matches(\r\n        /(?=.*^[A-Za-z]\\w).*$/,\r\n        \"Middle name should only contain alphabet.\"\r\n      ),\r\n\r\n    last_name: Yup.string()\r\n      .min(2, \"Last name must be at least 2 characters.\")\r\n      .max(50, \"Last name should be 50 characters.\")\r\n      .matches(\r\n        /(?=.*^[A-Za-z]\\w).*$/,\r\n        \"Last name should only contain alphabet.\"\r\n      ),\r\n    email: Yup.string().email().required(\"Email is required.\"),\r\n    username: Yup.string()\r\n      .required(\"Username is required.\")\r\n      .min(4, \"Username must be at least 4 characters.\")\r\n      .max(50, \"Username should be 50 characters.\")\r\n      .matches(\r\n        /(?=.*^[A-Za-z_]\\w).*$/,\r\n        \"Username should begin with _ or alphabet.\"\r\n      ),\r\n    password: Yup.string()\r\n      .required(\"Please Enter your password\")\r\n      .min(6, \"Password must be at least 6 characters.\")\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{6,}$/,\r\n        \"Must Contain 6 Characters, One alphabet and One Number \"\r\n      ),\r\n    confirm_password: Yup.string()\r\n      .required(\"Password is required.\")\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match.\"),\r\n\r\n    user_branch: Yup.object()\r\n      .typeError(\"Branch is required\")\r\n      .required(\"Branch is required\"),\r\n    // group: Yup.object()\r\n    //   .typeError(\"Group is required\")\r\n    //   .required(\"Group is required\"),\r\n    employee_id: Yup.string(),\r\n    is_active: Yup.bool(),\r\n    gender: Yup.object().nullable(true),\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    const {\r\n      first_name,\r\n      middle_name,\r\n      last_name,\r\n      email,\r\n      username,\r\n      is_active,\r\n      employee_id,\r\n      user_branch,\r\n      gender,\r\n      // group,\r\n      password,\r\n      confirm_password,\r\n    } = values;\r\n    const capitalFirstName =\r\n      first_name?.charAt(0).toUpperCase() + first_name?.slice(1);\r\n    const capitalMiddleName =\r\n      middle_name?.charAt(0).toUpperCase() + middle_name?.slice(1);\r\n    const capitalLastName =\r\n      last_name?.charAt(0).toUpperCase() + last_name?.slice(1);\r\n    const smallUserName = username?.toLowerCase();\r\n    setLock(true);\r\n    dispatch(\r\n      createUser(\r\n        {\r\n          first_name: capitalFirstName,\r\n          middle_name: capitalMiddleName,\r\n          last_name: capitalLastName,\r\n          email,\r\n          username: smallUserName,\r\n          gender,\r\n          employee_id,\r\n          user_branch: user_branch?.id,\r\n          // group: group?.id,\r\n          is_active,\r\n          password,\r\n          confirm_password,\r\n          history,\r\n        },\r\n        currentPage\r\n      )\r\n    );\r\n    setLock(false);\r\n    setData(null);\r\n  };\r\n\r\n  // function which checks whether the bank is added already or not\r\n  const handleChange = async (e) => {\r\n    if (edit && e.target.value !== user?.username) {\r\n      if (e.target.value.trim() && e.target.value !== \"\") {\r\n        const result = await checkRedundantDataUser(e);\r\n        result\r\n          ? errorFunction(\"User name with this  is already added. \") ||\r\n            setLock(true)\r\n          : setLock(false);\r\n      }\r\n    }\r\n    if (e.target.value.trim() && e.target.value !== \"\") {\r\n      const result = await checkRedundantDataUser(e);\r\n      result\r\n        ? errorFunction(\"User with this name is already added \") ||\r\n          setLock(true)\r\n        : setLock(false);\r\n    }\r\n  };\r\n\r\n  // toggle password\r\n  const handlePasswordClick = () => {\r\n    if (password === \"password\") {\r\n      setPassword(\"text\");\r\n    } else {\r\n      setPassword(\"password\");\r\n    }\r\n  };\r\n  // toggle password\r\n  const handleConfirmClick = () => {\r\n    if (confirmPassword === \"password\") {\r\n      setConfirmPassword(\"text\");\r\n    } else {\r\n      setConfirmPassword(\"password\");\r\n    }\r\n  };\r\n  const loadOptions = async (search, loadOptions, { limit, offset }) => {\r\n    const { data } = await axiosInstance(\r\n      `/api/v1/core-app/branch?search=${search}&offset=${offset}&limit=${limit}`\r\n    );\r\n\r\n    return {\r\n      options: data.results,\r\n      hasMore: data.count > limit ? true : false,\r\n      additional: {\r\n        offset: limit,\r\n        limit: limit + 10,\r\n      },\r\n    };\r\n  };\r\n  // const loadOptionsGroups = async (search, loadOptions, { limit, offset }) => {\r\n  //   const { data } = await axiosInstance(\r\n  //     `/api/v1/group-app/group?search=${search}&offset=${offset}&limit=${limit}`\r\n  //   );\r\n\r\n  //   return {\r\n  //     options: data.results,\r\n  //     hasMore: data.count > limit ? true : false,\r\n  //     additional: {\r\n  //       offset: limit,\r\n  //       limit: limit + 10,\r\n  //     },\r\n  //   };\r\n  // };\r\n  return (\r\n    <>\r\n      <div className=\"row justify-content-center mt-3\">\r\n        <div className=\"col-12\">\r\n          <div className=\"registration-process \">\r\n            <Formik\r\n              enableReinitialize={true}\r\n              initialValues={initialState}\r\n              validationSchema={validationSchema}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {(formik) => {\r\n                return (\r\n                  <Form autoComplete=\"off\">\r\n                    <div className=\"form-group row mb-2 justify-content-center\">\r\n                      <div className=\" col-4\">\r\n                        <label\r\n                          htmlFor=\"first_name\"\r\n                          className=\"fw-bold float-start\"\r\n                        >\r\n                          First Name\r\n                        </label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"first_name\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"First Name\"\r\n                        />\r\n                        <ErrorMessage name=\"first_name\" component={TextError} />\r\n                      </div>\r\n                      <div className=\" col-4\">\r\n                        <label\r\n                          htmlFor=\"middle_name\"\r\n                          className=\"fw-bold float-start\"\r\n                        >\r\n                          Middle Name\r\n                        </label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"middle_name\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Middle Name\"\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"middle_name\"\r\n                          component={TextError}\r\n                        />\r\n                      </div>\r\n                      <div className=\" col-4\">\r\n                        <label\r\n                          htmlFor=\"last_name\"\r\n                          className=\"fw-bold float-start\"\r\n                        >\r\n                          Last Name\r\n                        </label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"last_name\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Last Name\"\r\n                        />\r\n                        <ErrorMessage name=\"last_name\" component={TextError} />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group row mb-2 justify-content-center\">\r\n                      <div className=\"col-3\">\r\n                        <label\r\n                          htmlFor=\"username\"\r\n                          className=\"fw-bold float-start\"\r\n                        >\r\n                          User Name (Case Insensitive)\r\n                          <strong className=\"text-danger ml-1\">*</strong>\r\n                        </label>\r\n\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"username\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Username\"\r\n                          onChange={(e) => {\r\n                            const val = (e.target.value || \"\").replace(\r\n                              /\\s+/gi,\r\n                              \"\"\r\n                            );\r\n                            formik.setFieldValue(\"username\", val.trim());\r\n                            handleChange(e);\r\n                          }}\r\n                          autoFocus\r\n                        />\r\n                        <ErrorMessage name=\"username\" component={TextError} />\r\n                      </div>\r\n                      <div className=\" col-3\">\r\n                        <label htmlFor=\"email\" className=\"fw-bold float-start\">\r\n                          Email\r\n                          <strong className=\"text-danger ml-1\">*</strong>\r\n                        </label>\r\n                        <Field\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Email\"\r\n                        />\r\n                        <ErrorMessage name=\"email\" component={TextError} />\r\n                      </div>\r\n                      <div className=\" col-3\">\r\n                        <label\r\n                          htmlFor=\"employee_id\"\r\n                          className=\"fw-bold float-start\"\r\n                        >\r\n                          Employee ID\r\n                          <strong className=\"text-danger ml-1\">*</strong>\r\n                        </label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"employee_id\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Employee ID\"\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"employee_id\"\r\n                          component={TextError}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-3 \">\r\n                        <label htmlFor=\"user_branch\" className=\"fw-bold \">\r\n                          Branch\r\n                          <strong className=\"text-danger ml-1\">*</strong>\r\n                        </label>\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <div className=\"col-12\">\r\n                            <AsyncPaginate\r\n                              value={formik.values.user_branch}\r\n                              isClearable=\"true\"\r\n                              isSearchable=\"true\"\r\n                              name=\"user_branch\"\r\n                              getOptionLabel={(option) => `${option?.name} `}\r\n                              getOptionValue={(option) => `${option?.id}`}\r\n                              onChange={(selected) => {\r\n                                formik.setFieldValue(\"user_branch\", selected);\r\n                              }}\r\n                              loadOptions={loadOptions}\r\n                              additional={{\r\n                                offset: 0,\r\n                                limit: 10,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <ErrorMessage\r\n                            name=\"user_branch\"\r\n                            component={TextError}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group row mb-2 justify-content-center\">\r\n                      {/* <div className=\"col-4\">\r\n                        <label\r\n                          htmlFor=\"birth_date\"\r\n                          className=\"fw-bold float-start\"\r\n                        >\r\n                          Birth Date\r\n                        </label>\r\n                        <div className=\"datepicker\">\r\n                          <DatePicker\r\n                            name=\"birth_date\"\r\n                            selected={formik.values.birth_date}\r\n                            showMonthDropdown\r\n                            showYearDropdown\r\n                            placeholderText=\"Birth Date\"\r\n                            dropdownMode=\"select\"\r\n                            className=\"form-control\"\r\n                            dateFormat=\"yyyy-MM-dd\"\r\n                            onChange={(date) =>\r\n                              formik.setFieldValue(\"birth_date\", date)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <label\r\n                          htmlFor=\"mobile_no\"\r\n                          className=\"fw-bold float-start\"\r\n                        >\r\n                          Mobile Number\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <div className=\"input-group-prepend\">\r\n                            <span\r\n                              className=\"form-control input-group-text\"\r\n                              id=\"basic-addon2\"\r\n                            >\r\n                              +977\r\n                            </span>\r\n                          </div>\r\n                          <Field\r\n                            type=\"number\"\r\n                            name=\"mobile_no\"\r\n                            className=\"form-control \"\r\n                            placeholder=\"Mobile Number\"\r\n                          />\r\n                        </div>\r\n                        <ErrorMessage name=\"mobile_no\" component={TextError} />\r\n                      </div> */}\r\n                      {/* <div className=\"col-4 \">\r\n                        <label htmlFor=\"user_branch\" className=\"fw-bold \">\r\n                          User Role{\" \"}\r\n                          <strong className=\"text-danger ml-1\">*</strong>\r\n                        </label>\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <div className=\"col-10\">\r\n                            <AsyncPaginate\r\n                              styles={styles}\r\n                              value={formik.values.user_branch}\r\n                              isClearable=\"true\"\r\n                              isSearchable=\"true\"\r\n                              isMulti\r\n                              name=\"user_branch\"\r\n                              getOptionLabel={(option) => `${option?.name} `}\r\n                              getOptionValue={(option) => `${option?.id}`}\r\n                              onChange={(selected) => {\r\n                                formik.setFieldValue(\"user_branch\", selected);\r\n                              }}\r\n                              loadOptions={loadOptions}\r\n                              additional={{\r\n                                offset: 0,\r\n                                limit: 10,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          {(is_superuser ||\r\n                            permissions?.includes(\"add_user\")) && (\r\n                            <IconForCreatingModule\r\n                              setShowOtherModule={setShowUserRoleModal}\r\n                              setData={() => setData(formik?.values)}\r\n                              types={\"user\"}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                        <div>\r\n                          <ErrorMessage name=\"user_branch\" component={TextError} />\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                    <div className=\"form-group row mb-2 justify-content-center\">\r\n                      <div className=\"col-3 password-field\">\r\n                        <label\r\n                          htmlFor=\"password\"\r\n                          className=\"fw-bold float-start\"\r\n                        >\r\n                          Password\r\n                          <strong className=\"text-danger ml-1\">*</strong>\r\n                        </label>\r\n                        <div style={{ position: \"relative\" }}>\r\n                          <Field\r\n                            type={password}\r\n                            name=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Password\"\r\n                          />\r\n\r\n                          <span onClick={handlePasswordClick}>\r\n                            {password === \"password\" ? (\r\n                              <BsFillEyeSlashFill />\r\n                            ) : (\r\n                              <BsFillEyeFill />\r\n                            )}\r\n                          </span>\r\n                        </div>\r\n                        <ErrorMessage name=\"password\" component={TextError} />\r\n                      </div>\r\n                      <div className=\"col-3 password-field\">\r\n                        <label\r\n                          htmlFor=\"confirm_password\"\r\n                          className=\"fw-bold float-start\"\r\n                        >\r\n                          Confirm Password\r\n                          <strong className=\"text-danger ml-1\">*</strong>\r\n                        </label>\r\n                        <div style={{ position: \"relative\" }}>\r\n                          <Field\r\n                            type={confirmPassword}\r\n                            name=\"confirm_password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Confirm Password\"\r\n                          />\r\n                          <span onClick={handleConfirmClick}>\r\n                            {confirmPassword === \"password\" ? (\r\n                              <BsFillEyeSlashFill />\r\n                            ) : (\r\n                              <BsFillEyeFill />\r\n                            )}\r\n                          </span>\r\n                        </div>\r\n                        <ErrorMessage\r\n                          name=\"confirm_password\"\r\n                          component={TextError}\r\n                        />\r\n                      </div>\r\n                      {/* <div className=\"col-3 \">\r\n                        <label htmlFor=\"group\" className=\"fw-bold \">\r\n                          Group\r\n                          <strong className=\"text-danger ml-1\">*</strong>\r\n                        </label>\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <div className=\"col-12\">\r\n                            <AsyncPaginate\r\n                              value={formik.values.group}\r\n                              isClearable=\"true\"\r\n                              isSearchable=\"true\"\r\n                              name=\"group\"\r\n                              getOptionLabel={(option) => `${option?.name} `}\r\n                              getOptionValue={(option) => `${option?.id}`}\r\n                              onChange={(selected) => {\r\n                                formik.setFieldValue(\"group\", selected);\r\n                              }}\r\n                              loadOptions={loadOptionsGroups}\r\n                              additional={{\r\n                                offset: 0,\r\n                                limit: 10,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <ErrorMessage name=\"group\" component={TextError} />\r\n                        </div>\r\n                      </div> */}\r\n                      <div className=\"col-3\">\r\n                        <label htmlFor=\"gender\" className=\"fw-bold \">\r\n                          Gender\r\n                        </label>\r\n\r\n                        <Select\r\n                          value={genderValue}\r\n                          isClearable=\"true\"\r\n                          isSearchable=\"true\"\r\n                          name=\"gender\"\r\n                          getOptionLabel={(option) => `${option?.name} `}\r\n                          getOptionValue={(option) => `${option?.id}`}\r\n                          options={genders}\r\n                          onChange={(selected) => {\r\n                            formik.setFieldValue(\"gender\", selected?.id);\r\n                            setGenderValue(selected);\r\n                          }}\r\n                        />\r\n                        <ErrorMessage name=\"gender\" component={TextError} />\r\n                      </div>\r\n                    </div>\r\n                    {/* <div className=\"form-group row mb-2\">\r\n                      <div className=\" col-4 \">\r\n                        <label htmlFor=\"photo\" className=\"fw-bold float-start\">\r\n                          Photo\r\n                        </label>\r\n                        <input\r\n                          type=\"file\"\r\n                          name=\"photo\"\r\n                          className=\"form-control\"\r\n                          onChange={(event) => {\r\n                            formik.setFieldValue(\r\n                              \"photo\",\r\n                              event.target.files[0]\r\n                            );\r\n                            let reader = new FileReader();\r\n                            reader.readAsDataURL(event.target.files[0]);\r\n                            reader.onloadend = () => setImg([reader.result]);\r\n                          }}\r\n                        />\r\n\r\n                        {img && <Thumb thumb={img} />}\r\n                        {user && user.photo && !img && (\r\n                          <Thumb\r\n                            thumb={user.photo}\r\n                            handleDelete={handleDelete}\r\n                          />\r\n                        )}\r\n                        <ErrorMessage name=\"photo\" component={TextError} />\r\n                      </div>\r\n                    </div> */}\r\n                    <div className=\"form-group row mb-2\">\r\n                      <div className=\"col-12 text-center\">\r\n                        <Field\r\n                          type=\"checkbox\"\r\n                          name=\"is_active\"\r\n                          id=\"is_active\"\r\n                          className=\"filled-in chk-col-blue\"\r\n                        />\r\n                        <label htmlFor=\"is_active\" className=\"fw-bold  mx-2\">\r\n                          {\" \"}\r\n                          Active\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group text-center\">\r\n                      <Button\r\n                        type={\"btn\"}\r\n                        className={\"btn btn-primary\"}\r\n                        loading={loading}\r\n                        disabled={lock || !formik.dirty}\r\n                        title={\"Create\"}\r\n                        content={\"Add\"}\r\n                      />\r\n                    </div>\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default React.memo(CreateUser);\r\n"],"names":["CreateUser","currentPage","loading","history","useHistory","user","useSelector","state","auth","permissions","is_superuser","edit","useState","genderValue","setGenderValue","dispatch","useDispatch","password","setPassword","confirmPassword","setConfirmPassword","lock","setLock","data","setData","initialState","first_name","middle_name","last_name","user_branch","email","employee_id","username","gender","confirm_password","is_active","validationSchema","Yup","shape","min","max","matches","required","oneOf","typeError","nullable","handleChange","e","target","value","trim","checkRedundantDataUser","errorFunction","handlePasswordClick","handleConfirmClick","loadOptions","search","limit","offset","axiosInstance","options","results","hasMore","count","additional","className","enableReinitialize","initialValues","onSubmit","values","capitalFirstName","charAt","toUpperCase","slice","capitalMiddleName","capitalLastName","smallUserName","toLowerCase","createUser","id","formik","autoComplete","htmlFor","type","name","placeholder","component","TextError","onChange","val","replace","setFieldValue","autoFocus","style","display","isClearable","isSearchable","getOptionLabel","option","getOptionValue","selected","position","onClick","genders","disabled","dirty","title","content","React"],"sourceRoot":""}