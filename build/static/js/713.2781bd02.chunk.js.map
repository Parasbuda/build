{"version":3,"file":"static/js/713.2781bd02.chunk.js","mappings":"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","sources":["Component/Button/Button.js","Component/Data/Data.js","Component/Spinner/Spinner.js","Component/TextError/TextError.js","Component/Tooltip/Tooltip.js","Pages/User/EditUser.js","Redux/User/api.js","Redux/User/action.js","Redux/User/thunk.js","utils/redundant/user.js"],"sourcesContent":["import React from \"react\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Tooltip from \"../Tooltip/Tooltip\";\r\n\r\nconst Button = ({ type, className, disabled, title, loading, content, color, onClick }) => {\r\n\r\n    return (\r\n        <Tooltip content={content}>\r\n            <button onClick={onClick} type={type} className={className} disabled={disabled}>\r\n                {loading ? <Spinner color={color} /> : title}\r\n\r\n            </button>\r\n        </Tooltip>\r\n    )\r\n}\r\nexport default Button","export const options = [\r\n    { id: 1, name: \"CASH\" },\r\n    { id: 2, name: \"CREDIT\" },\r\n  ];\r\n  export const genders = [\r\n    { id: 1, name: \"Male\" },\r\n    { id: 2, name: \"Female\" },\r\n  ];\r\n  export const tax_reg_systems = [\r\n    { id: 1, name: \"VAT\" },\r\n    { id: 2, name: \"PAN\" },\r\n    { id: 3, name: \"N/A\" },\r\n  ];\r\n  export const depreciationMethods = [\r\n    { id: 1, name: \"Straight line\" },\r\n    { id: 2, name: \"Diminishing Balance \" },\r\n    { id: 3, name: \"Unit Of Product\" },\r\n  ];","import React from \"react\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\nconst Spinner = ({ color }) => {\r\n  return <img src={spinner} alt=\"spinner\" color={color} height=\"30px\" className=\"ml-4\" />;\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport \"./TextError.css\";\r\nconst TextError = (props) => {\r\n  return <div className=\"error\">{props.children}</div>;\r\n};\r\n\r\nexport default TextError;\r\n","import React from \"react\";\r\nimport Tippy from \"@tippyjs/react\";\r\nconst Tooltip = ({ content, children }) => {\r\n  return <Tippy content={content}>{children}</Tippy>;\r\n};\r\n\r\nexport default Tooltip;","import React, { useState } from \"react\";\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport Button from \"../../Component/Button/Button\";\r\nimport Select from \"react-select\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport TextError from \"../../Component/TextError/TextError\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { updateUser } from \"../../Redux/User/thunk\";\r\nimport { errorFunction } from \"../../Component/Alert\";\r\n\r\nimport { checkRedundantDataUser } from \"../../utils/redundant/user\";\r\n\r\nimport { genders } from \"../../Component/Data/Data\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AsyncPaginate } from \"react-select-async-paginate\";\r\nimport axiosInstance from \"../../utils/axios\";\r\nconst EditUser = ({ loading, currentPage }) => {\r\n  // props\r\n  const history = useHistory();\r\n  const permissions = useSelector((state) => state.auth.permissions);\r\n  const is_superuser = useSelector((state) => state.auth.is_superuser);\r\n  const user = useSelector((state) => state.user.user);\r\n  const edit = useSelector((state) => state.user.edit);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //state for disabling the submit button\r\n\r\n  const [lock, setLock] = useState(false);\r\n  //initial state of the form\r\n  const initialState = {\r\n    first_name: edit ? user?.first_name : \"\",\r\n    middle_name: edit ? user?.middle_name : \"\",\r\n    last_name: edit ? user?.last_name : \"\",\r\n    email: edit ? user?.email : \"\",\r\n    username: edit ? user?.username : \"\",\r\n    user_branch: edit ? user?.user_branch : null,\r\n    group: edit ? user?.group : null,\r\n    employee_id: edit ? user?.employee_id : \"\",\r\n    gender: edit ? genders.find((gender) => gender.id === user?.gender) : \"\",\r\n    remarks: \"\",\r\n    is_active: edit ? user?.is_active : false,\r\n  };\r\n\r\n  //validation rules of the form\r\n  const validationSchema = Yup.object().shape({\r\n    first_name: Yup.string()\r\n      .min(2, \"First name must be at least 2 characters.\")\r\n      .max(50, \"First name should be 50 characters.\")\r\n      .matches(\r\n        /(?=.*^[A-Za-z]\\w).*$/,\r\n        \"First name should only contain alphabet.\"\r\n      ),\r\n    middle_name: Yup.string()\r\n      .min(2, \"Middle name must be at least 2 characters.\")\r\n      .max(50, \"Middle name should be 50 characters.\")\r\n      .matches(\r\n        /(?=.*^[A-Za-z]\\w).*$/,\r\n        \"Middle name should only contain alphabet.\"\r\n      ),\r\n\r\n    last_name: Yup.string()\r\n      .min(2, \"Last name must be at least 2 characters.\")\r\n      .max(50, \"Last name should be 50 characters.\")\r\n      .matches(\r\n        /(?=.*^[A-Za-z]\\w).*$/,\r\n        \"Last name should only contain alphabet.\"\r\n      ),\r\n    email: Yup.string().email().required(\"Email is required.\"),\r\n    user_branch: Yup.object()\r\n      .typeError(\"Branch is required\")\r\n      .required(\"Branch is required\"),\r\n    group: Yup.object()\r\n      .typeError(\"Group is required\")\r\n      .required(\"Group is required\"),\r\n    employee_id: Yup.string(),\r\n    username: Yup.string()\r\n      .required(\"Username is required.\")\r\n      .min(4, \"Username must be at least 4 characters.\")\r\n      .max(50, \"Username should be 50 characters.\")\r\n      .matches(\r\n        /(?=.*^[A-Za-z_]\\w).*$/,\r\n        \"Username should begin with _ or alphabet.\"\r\n      ),\r\n\r\n    is_active: Yup.bool(),\r\n    gender: Yup.object().nullable(true),\r\n    remarks: Yup.string().required(\"Remarks is required\"),\r\n  });\r\n  const onSubmit = (values) => {\r\n    const {\r\n      first_name,\r\n      middle_name,\r\n      last_name,\r\n      email,\r\n      username,\r\n      employee_id,\r\n      user_branch,\r\n      is_active,\r\n      group,\r\n      gender,\r\n\r\n      remarks,\r\n    } = values;\r\n\r\n    const capitalFirstName =\r\n      first_name?.charAt(0).toUpperCase() + first_name?.slice(1);\r\n    const capitalLastName =\r\n      last_name?.charAt(0).toUpperCase() + last_name?.slice(1);\r\n    const capitalMiddleName =\r\n      middle_name?.charAt(0).toUpperCase() + middle_name?.slice(1);\r\n\r\n    setLock(true);\r\n    if (edit) {\r\n      const id = user.id;\r\n      dispatch(\r\n        updateUser(\r\n          id,\r\n          {\r\n            first_name: capitalFirstName,\r\n            middle_name: capitalMiddleName,\r\n            last_name: capitalLastName,\r\n            email,\r\n            username: username?.charAt(0).toLowerCase() + username?.slice(1),\r\n            gender: gender !== \"\" ? gender.id : \"\",\r\n            employee_id,\r\n            user_branch: user_branch?.id,\r\n            group: group?.id,\r\n            is_active,\r\n            remarks,\r\n          },\r\n          history,\r\n          currentPage\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  // function which checks whether the bank is added already or not\r\n  const handleChange = async (e) => {\r\n    if (edit && e.target.value !== user?.username) {\r\n      if (e.target.value.trim() && e.target.value !== \"\") {\r\n        const result = await checkRedundantDataUser(e);\r\n        result\r\n          ? errorFunction(\"User name with this  is already added. \") ||\r\n            setLock(true)\r\n          : setLock(false);\r\n      }\r\n    }\r\n    if (!edit && e.target.value.trim() && e.target.value !== \"\") {\r\n      const result = await checkRedundantDataUser(e);\r\n      result\r\n        ? errorFunction(\"User with this name is already added \") ||\r\n          setLock(true)\r\n        : setLock(false);\r\n    }\r\n  };\r\n  const loadOptions = async (search, loadOptions, { limit, offset }) => {\r\n    const { data } = await axiosInstance(\r\n      `/api/v1/core-app/branch?search=${search}&offset=${offset}&limit=${limit}`\r\n    );\r\n\r\n    return {\r\n      options: data.results,\r\n      hasMore: data.count > limit ? true : false,\r\n      additional: {\r\n        offset: limit,\r\n        limit: limit + 10,\r\n      },\r\n    };\r\n  };\r\n  const loadOptionsGroups = async (search, loadOptions, { limit, offset }) => {\r\n    const { data } = await axiosInstance(\r\n      `/api/v1/group-app/group?search=${search}&offset=${offset}&limit=${limit}`\r\n    );\r\n\r\n    return {\r\n      options: data.results,\r\n      hasMore: data.count > limit ? true : false,\r\n      additional: {\r\n        offset: limit,\r\n        limit: limit + 10,\r\n      },\r\n    };\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"row  mt-3\">\r\n        <div className=\"col-12\">\r\n          <div className=\"registration-process \">\r\n            <Formik\r\n              enableReinitialize={true}\r\n              initialValues={initialState}\r\n              validationSchema={validationSchema}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {(formik) => {\r\n                return (\r\n                  <Form autoComplete=\"off\">\r\n                    <div className=\"form-group row mb-2 justify-content-center\">\r\n                      <div className=\"col-3\">\r\n                        <label htmlFor=\"first_name\" className=\"fw-bold\">\r\n                          First Name\r\n                        </label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"first_name\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"First Name\"\r\n                        />\r\n                        <ErrorMessage name=\"first_name\" component={TextError} />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <label htmlFor=\"middle_name\" className=\"fw-bold\">\r\n                          Middle Name\r\n                        </label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"middle_name\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Middle Name\"\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"middle_name\"\r\n                          component={TextError}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <label htmlFor=\"last_name\" className=\"fw-bold\">\r\n                          Last Name\r\n                        </label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"last_name\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Last Name\"\r\n                        />\r\n                        <ErrorMessage name=\"last_name\" component={TextError} />\r\n                      </div>\r\n                      <div className=\"col-3 \">\r\n                        <label htmlFor=\"user_branch\" className=\"fw-bold \">\r\n                          Branch\r\n                          <strong className=\"text-danger ml-1\">*</strong>\r\n                        </label>\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <div className=\"col-12\">\r\n                            <AsyncPaginate\r\n                              value={formik.values.user_branch}\r\n                              isClearable=\"true\"\r\n                              isSearchable=\"true\"\r\n                              name=\"user_branch\"\r\n                              getOptionLabel={(option) => `${option?.name} `}\r\n                              getOptionValue={(option) => `${option?.id}`}\r\n                              onChange={(selected) => {\r\n                                formik.setFieldValue(\"user_branch\", selected);\r\n                              }}\r\n                              loadOptions={loadOptions}\r\n                              additional={{\r\n                                offset: 0,\r\n                                limit: 10,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <ErrorMessage\r\n                            name=\"user_branch\"\r\n                            component={TextError}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group row mb-2 justify-content-center\">\r\n                      <div className=\"col-3\">\r\n                        <label htmlFor=\"username\" className=\"fw-bold\">\r\n                          User Name (Case sensitive)\r\n                          <span className=\"text-danger\">*</span>\r\n                        </label>\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"username\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Username\"\r\n                          onChange={(e) => {\r\n                            const val = (e.target.value || \"\").replace(\r\n                              /\\s+/gi,\r\n                              \"\"\r\n                            );\r\n                            formik.setFieldValue(\"username\", val.trim());\r\n                            handleChange(e);\r\n                          }}\r\n                        />\r\n                        <ErrorMessage name=\"username\" component={TextError} />\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <label htmlFor=\"email\" className=\"fw-bold\">\r\n                          Email\r\n                          <strong className=\"text-danger ml-1\">*</strong>\r\n                        </label>\r\n                        <Field\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          className=\"form-control \"\r\n                          placeholder=\"Email\"\r\n                        />\r\n                        <ErrorMessage name=\"email\" component={TextError} />\r\n                      </div>\r\n                      <div className=\"col-3 \">\r\n                        <label htmlFor=\"group\" className=\"fw-bold \">\r\n                          Group\r\n                          <strong className=\"text-danger ml-1\">*</strong>\r\n                        </label>\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <div className=\"col-12\">\r\n                            <AsyncPaginate\r\n                              value={formik.values.group}\r\n                              isClearable=\"true\"\r\n                              isSearchable=\"true\"\r\n                              name=\"group\"\r\n                              getOptionLabel={(option) => `${option?.name} `}\r\n                              getOptionValue={(option) => `${option?.id}`}\r\n                              onChange={(selected) => {\r\n                                formik.setFieldValue(\"group\", selected);\r\n                              }}\r\n                              loadOptions={loadOptionsGroups}\r\n                              additional={{\r\n                                offset: 0,\r\n                                limit: 10,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <ErrorMessage name=\"group\" component={TextError} />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <label htmlFor=\"gender\" className=\"fw-bold\">\r\n                          Gender\r\n                        </label>\r\n                        <Select\r\n                          value={formik.values.gender}\r\n                          isClearable=\"true\"\r\n                          isSearchable=\"true\"\r\n                          name=\"gender\"\r\n                          getOptionLabel={(option) => `${option?.name} `}\r\n                          getOptionValue={(option) => `${option?.id}`}\r\n                          options={genders}\r\n                          onChange={(selected) => {\r\n                            formik.setFieldValue(\"gender\", selected);\r\n                          }}\r\n                        />\r\n                        <ErrorMessage name=\"gender\" component={TextError} />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row mb-2\">\r\n                      <div className=\"col-3\">\r\n                        <label htmlFor=\"remarks\" className=\"fw-bold\">\r\n                          Remarks\r\n                          <span className=\"text-danger\">*</span>\r\n                        </label>\r\n                        <textarea\r\n                          type=\"text\"\r\n                          name=\"remarks\"\r\n                          onChange={(e) => {\r\n                            formik.setFieldValue(\r\n                              \"remarks\",\r\n                              e.target.value.trim()\r\n                            );\r\n                          }}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Enter remarks\"\r\n                        />\r\n                        <ErrorMessage name=\"remarks\" component={TextError} />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group row mb-2 justify-content-center\">\r\n                      <div className=\"form-group row mb-2 \">\r\n                        <div className=\"col-12 text-center \">\r\n                          <Field\r\n                            type=\"checkbox\"\r\n                            name=\"is_active\"\r\n                            id=\"is_active\"\r\n                            className=\"filled-in chk-col-blue\"\r\n                          />\r\n                          <label htmlFor=\"is_active\" className=\"fw-bold  mx-2\">\r\n                            {\" \"}\r\n                            Active\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group text-center\">\r\n                      <Button\r\n                        type={\"btn\"}\r\n                        className={\"btn btn-primary \"}\r\n                        loading={loading}\r\n                        disabled={lock}\r\n                        title={\"Update\"}\r\n                        content={\"Update\"}\r\n                      />\r\n                    </div>\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default React.memo(EditUser);\r\n","import axiosInstance from \"../../utils/axios\";\r\n\r\n//obtaining the paginated data\r\nexport const getUser = (postsPerPage) =>\r\n  axiosInstance.get(\r\n    `api/v1/user-app/user?offset=0&limit=${postsPerPage}&ordering=-id`\r\n  );\r\n\r\n//obtaining all data\r\nexport const getAllUser = () =>\r\n  axiosInstance.get(`api/v1/user-app/user?ordering=-id`);\r\n\r\nexport const getCurrentUser = (decoded) =>\r\n  axiosInstance.get(`api/v1/user-app/user/${decoded.user_id}`);\r\n//obtaining the previous page data from paginated data\r\nexport const getPrevious = (previous) => axiosInstance.get(previous);\r\n\r\n//obtaining the next page data from paginated data\r\nexport const getNext = (next) => axiosInstance.get(next);\r\n\r\n//obtaining the particular page data from paginated data\r\nexport const getPageUser = (number, postsPerPage) =>\r\n  axiosInstance.get(\r\n    `api/v1/user-app/user?offset=${\r\n      (number - 1) * postsPerPage\r\n    }&limit=${postsPerPage}&ordering=-id`\r\n  );\r\n\r\n//creating function\r\nexport const createUser = (body) =>\r\n  axiosInstance.post(`api/v1/user-app/user`, body);\r\n\r\n//deleting function\r\nexport const deleteUser = (id) =>\r\n  axiosInstance.delete(`api/v1/user-app/user/${id}`);\r\n\r\n//update function\r\nexport const updateUser = (id, body) =>\r\n  axiosInstance.patch(`api/v1/user-app/update-user/${id}`, body);\r\n\r\n//searching function\r\nexport const handleSearch = (search, postsPerPage) =>\r\n  axiosInstance.get(\r\n    `api/v1/user-app/user?offset=0&limit=${postsPerPage}&search=${search}`\r\n  );\r\n\r\n// checking the redundant data\r\nexport const checkRedundantData = (e, cancelToken) =>\r\n  axiosInstance.get(`api/v1/user-app/user?username=${e.target.value.trim()}`, {\r\n    cancelToken: cancelToken.token,\r\n  });\r\n//deleting the image\r\nexport const handleDelete = (id, body) =>\r\n  axiosInstance.patch(`api/v1/user-app/user/${id}`, body);\r\n//change password\r\nexport const changePassword = (body, id) =>\r\n  axiosInstance.get(`api/v1/user-app/change_password/${id}`);\r\n","import { userConstants } from \"./constants\";\r\n// actions\r\nexport const loadingAction = () => ({\r\n  type: userConstants.LOADING_USER,\r\n});\r\nexport const loadingUpdatedAction = () => ({\r\n  type: userConstants.LOADING_UPDATED,\r\n});\r\nexport const getUserSuccessAction = (data) => ({\r\n  type: userConstants.GET_USER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getUserFailAction = (error) => ({\r\n  type: userConstants.GET_USER_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const getAllUserSuccessAction = (data) => ({\r\n  type: userConstants.GET_ALL_USER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getAllUserFailAction = (error) => ({\r\n  type: userConstants.GET_ALL_USER_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const getUserInfoSuccessAction = (data) => ({\r\n  type: userConstants.GET_USER_INFO_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getUserInfoFailAction = (error) => ({\r\n  type: userConstants.GET_USER_INFO_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const createUserSuccessAction = (data) => ({\r\n  type: userConstants.CREATE_USER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const createUserFailAction = (error) => ({\r\n  type: userConstants.CREATE_USER_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const deleteUserSuccessAction = (data) => ({\r\n  type: userConstants.USER_DELETED_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const deleteUserFailAction = (error) => ({\r\n  type: userConstants.USER_DELETED_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const updatedUserSuccessAction = (data) => ({\r\n  type: userConstants.UPDATE_USER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const updatedUserFailAction = (error) => ({\r\n  type: userConstants.UPDATE_USER_FAIL,\r\n  payload: error,\r\n});\r\nexport const deletePhotoSuccessAction = (data) => ({\r\n  type: userConstants.PHOTO_DELETED_SUCCESS,\r\n  payload: data,\r\n});\r\nexport const deletePhotoFailAction = (error) => ({\r\n  type: userConstants.PHOTO_DELETED_FAIL,\r\n  payload: error,\r\n});\r\n\r\n","import * as API from \"./api\";\r\nimport * as action from \"./action\";\r\nimport { errorFunction, successFunction } from \"../../Component/Alert\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n//get  Bank\r\nexport const getUser = (postsPerPage) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getUser(postsPerPage);\r\n    const filteredData = data.results.filter(\r\n      (user) => user.is_superuser === false\r\n    );\r\n    dispatch(action.getUserSuccessAction({ ...data, results: filteredData }));\r\n  } catch (error) {\r\n    dispatch(action.getUserFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n// get all bank\r\nexport const getAllUser = () => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getAllUser();\r\n    const filteredData = data.results.filter(\r\n      (user) => user.is_superuser === false\r\n    );\r\n    console.log(filteredData, \"data\");\r\n    dispatch(action.getUserSuccessAction(filteredData));\r\n  } catch (error) {\r\n    dispatch(action.getAllUserFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n//get previous  page\r\nexport const getPrevious = (previous) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getPrevious(previous);\r\n    const filteredData = data.results.filter(\r\n      (user) => user.is_superuser === false\r\n    );\r\n    dispatch(action.getUserSuccessAction({ ...data, results: filteredData }));\r\n  } catch (error) {\r\n    dispatch(action.getUserFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n//get next  page\r\nexport const getNext = (next) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getNext(next);\r\n    const filteredData = data.results.filter(\r\n      (user) => user.is_superuser === false\r\n    );\r\n    dispatch(action.getUserSuccessAction({ ...data, results: filteredData }));\r\n  } catch (error) {\r\n    dispatch(action.getUserFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n//get particular page\r\nexport const getPageUser =\r\n  ({ number, postsPerPage }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(action.loadingAction());\r\n      const { data } = await API.getPageUser(number, postsPerPage);\r\n\r\n      dispatch(action.getUserSuccessAction(data));\r\n    } catch (error) {\r\n      dispatch(action.getUserFailAction(error));\r\n      errorFunction(error);\r\n    }\r\n  };\r\n\r\nexport const getCurrentUser = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const decoded = token && jwt_decode(token);\r\n    const { data } = await API.getCurrentUser(decoded);\r\n    dispatch(action.getUserInfoSuccessAction(data));\r\n  } catch (error) {\r\n    dispatch(action.getUserInfoFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\nexport const createUser =\r\n  (\r\n    {\r\n      first_name,\r\n      middle_name,\r\n      last_name,\r\n      email,\r\n      username,\r\n      employee_id,\r\n      is_active,\r\n      user_branch,\r\n      group,\r\n      gender,\r\n      password,\r\n      confirm_password,\r\n      history,\r\n    },\r\n    currentPage\r\n  ) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const body = JSON.stringify({\r\n        first_name,\r\n        middle_name,\r\n        last_name,\r\n        email,\r\n        username,\r\n        employee_id,\r\n        group,\r\n        is_active,\r\n        user_branch,\r\n        gender,\r\n        password,\r\n        confirm_password,\r\n      });\r\n      dispatch(action.loadingAction());\r\n      await API.createUser(body);\r\n      // dispatch(action.createUserSuccessAction(data));\r\n      successFunction(\"User created successfully \");\r\n      dispatch(getPageUser({ number: currentPage, postsPerPage: 10 }));\r\n      history.push(\"/user\");\r\n    } catch (error) {\r\n      dispatch(action.createUserFailAction(error));\r\n      errorFunction(\"Failed to create user.\");\r\n    }\r\n  };\r\n// Delete  bank\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.deleteUser(id);\r\n    dispatch(action.deleteUserSuccessAction(data));\r\n    dispatch(getUser());\r\n    successFunction(\"Bank deleted Successfully\");\r\n  } catch (error) {\r\n    dispatch(action.deleteUserFailAction(error));\r\n    errorFunction(\"Failed to delete Bank \");\r\n  }\r\n};\r\n//update\r\nexport const updateUser =\r\n  (id, values, history, currentPage = undefined) =>\r\n  async (dispatch) => {\r\n    const {\r\n      first_name,\r\n      middle_name,\r\n      last_name,\r\n      email,\r\n      username,\r\n      employee_id,\r\n      user_branch,\r\n      group,\r\n      gender,\r\n      is_active,\r\n      remarks,\r\n    } = values;\r\n    try {\r\n      dispatch(action.loadingUpdatedAction());\r\n\r\n      const body = JSON.stringify({\r\n        first_name,\r\n        middle_name,\r\n        last_name,\r\n        email,\r\n        username,\r\n        employee_id,\r\n        user_branch,\r\n        group,\r\n        gender,\r\n        is_active,\r\n        remarks,\r\n      });\r\n      const { data } = await API.updateUser(id, body);\r\n\r\n      dispatch(getPageUser({ number: 1, postsPerPage: 10 }));\r\n      successFunction(\"User Updated Successfully \");\r\n      history.push(\"/user\");\r\n    } catch (error) {\r\n      dispatch(action.updatedUserFailAction(error));\r\n      errorFunction(\"Failed to Update User\");\r\n    }\r\n  };\r\n//handle Search\r\nexport const handleSearch = (search, postsPerPage) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.handleSearch(search, postsPerPage);\r\n    dispatch(action.getUserSuccessAction(data));\r\n  } catch (error) {\r\n    dispatch(action.getUserFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n//delete photo\r\nexport const deletePhoto = (id) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify({ photo: \"\" });\r\n    const { data } = await API.handleDelete(id, body);\r\n    dispatch(action.deletePhotoSuccessAction(data));\r\n    successFunction(data);\r\n  } catch (error) {\r\n    dispatch(action.deletePhotoFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { checkRedundantData } from \"../../Redux/User/api\";\r\nlet cancelToken;\r\nexport const checkRedundantDataUser = async (e) => {\r\n  //Check if there are any previous pending requests\r\n  if (typeof cancelToken !== typeof undefined) {\r\n    cancelToken.cancel(\"Operation canceled due to new request.\");\r\n  }\r\n  //Save the cancel token for the current request\r\n  cancelToken = axios.CancelToken.source();\r\n  try {\r\n    const { data } = await checkRedundantData(e, cancelToken);\r\n    if (data.length > 0) {\r\n      return true;\r\n    }\r\n    if (data.length <= 0) {\r\n      return false;\r\n    }\r\n  } catch (error) {}\r\n};"],"names":["type","className","disabled","title","loading","content","color","onClick","genders","id","name","src","spinner","alt","height","props","children","EditUser","currentPage","history","useHistory","user","useSelector","state","auth","permissions","is_superuser","edit","dispatch","useDispatch","useState","lock","setLock","initialState","first_name","middle_name","last_name","email","username","user_branch","group","employee_id","gender","remarks","is_active","validationSchema","Yup","shape","min","max","matches","required","typeError","nullable","handleChange","e","target","value","trim","checkRedundantDataUser","errorFunction","loadOptions","search","limit","offset","axiosInstance","data","options","results","hasMore","count","additional","loadOptionsGroups","enableReinitialize","initialValues","onSubmit","values","capitalFirstName","charAt","toUpperCase","slice","capitalLastName","capitalMiddleName","updateUser","toLowerCase","formik","autoComplete","htmlFor","placeholder","component","TextError","style","display","isClearable","isSearchable","getOptionLabel","option","getOptionValue","onChange","selected","setFieldValue","val","replace","React","getUser","postsPerPage","getPrevious","previous","getNext","next","getPageUser","number","createUser","body","handleSearch","checkRedundantData","cancelToken","token","loadingAction","userConstants","loadingUpdatedAction","getUserSuccessAction","payload","getUserFailAction","error","updatedUserFailAction","action","API","filteredData","filter","password","confirm_password","JSON","stringify","successFunction","push","cancel","axios","length"],"sourceRoot":""}